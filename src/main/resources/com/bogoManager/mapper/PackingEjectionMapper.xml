<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bogoManager.mapper.PackingEjectionMapper">

  <select id="selectPackingEjection" parameterType="PackingEjection" resultType="PackingEjection">
    SELECT e.e_id,
        e.raw_id,
        e.ejection_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.ejection,
        (select code_name from common_code where code = e.ejection AND code_group='ejection') as ejection_name,
        DATE_FORMAT(e.start_time, "%Y-%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%Y-%m-%d %H:%i") end_time,
        e.ejection_group,
        (select code_name from common_code where code = e.ejection_group AND code_group='jab_class') as ejection_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.gate_weight,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        rsm.kind AS raw_kind,
        rsm.product_name AS raw_product_name,
        rsm.product_id AS raw_product_id,
        e.plan_start_time,
        e.plan_end_time,
        e.ct,
        e.work_man1,
        e.work_man2
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    WHERE e.e_id = #{eId}
  </select>

  <select id="selectPackingEjectionProduce" parameterType="PackingEjection" resultType="PackingEjectionProduce">
    SELECT
        ep.ep_id,
        ep.vehicle_id,
        ep.production,
        ep.faulty_a,
        ep.faulty_b,
        ep.faulty_c,
        ep.faulty_d,
        ep.faulty_e,
        ep.faulty_f,
        ep.faulty_g,
        ep.faulty_h,
        ep.faulty_i,
        ep.faulty_j,
        ep.faulty_k,
        ep.faulty,
      (ep.production - ep.faulty) as complete,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        ep.weight,
        ep.cvt
    FROM packing_ejection e
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    WHERE e.e_id = #{eId}
  </select>

  <sql id="wherePackingEjectionPaging">
    <where>
      <!-- 검사일 -->
      <choose>
	      <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
	        AND REPLACE(e.ejection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND REPLACE(#{dateEnd}, '-', '')
	      </when>
	      <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart)">
	        AND REPLACE(e.ejection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND '99999999'
	      </when>
	      <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
	        AND REPLACE(e.ejection_date, '-', '') BETWEEN '00000000' AND REPLACE(#{dateEnd}, '-', '')
	      </when>
      </choose>
      <!-- 주/야간 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(workType)">AND e.work_type = #{workType}</if>
      <!-- 구분 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(kind)">AND vm.kind = #{kind} </if>
      <!-- 차종 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(modelCar)">AND vm.model_car = #{modelCar} </if>
      <!-- LH/RH -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(lhRh)">AND vm.lh_rh = #{lhRh} </if>
      <!-- 품명 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(productName)">AND vm.product_name LIKE CONCAT('%',#{productName},'%') </if>
      <!-- 반 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ejectionGroup)">AND e.ejection_group LIKE CONCAT('%',#{ejectionGroup},'%') </if>
      <!-- 사출호기 -->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ejection)">AND e.ejection LIKE CONCAT('%',#{ejection},'%') </if>
      <!-- 원재료	-->
      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(rawId)">AND e.raw_id LIKE CONCAT('%',#{rawId},'%') </if>
    </where>
  </sql>

  <select id="selectPackingEjectionList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        e.raw_id,
        DATE_FORMAT(e.ejection_date, '%y-%m-%d') as ejection_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.ejection,
        (select code_name from common_code where code = e.ejection AND code_group='ejection') as ejection_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.ejection_group,
        (select code_name from common_code where code = e.ejection_group AND code_group='jab_class') as ejection_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        vm.product_id,
        IFNULL( ep.production, 0) production,
        IF( ep.faulty_a=0, null, faulty_a) faulty_a,
        IF( ep.faulty_b=0, null, faulty_b) faulty_b,
        IF( ep.faulty_c=0, null, faulty_c) faulty_c,
        IF( ep.faulty_d=0, null, faulty_d) faulty_d,
        IF( ep.faulty_e=0, null, faulty_e) faulty_e,
        IF( ep.faulty_f=0, null, faulty_f) faulty_f,
        IF( ep.faulty_g=0, null, faulty_g) faulty_g,
        IF( ep.faulty_h=0, null, faulty_h) faulty_h,
        IF( ep.faulty_i=0, null, faulty_i) faulty_i,
        IF( ep.faulty_j=0, null, faulty_j) faulty_j,
        IF( ep.faulty_k=0, null, faulty_k) faulty_k,
        IFNULL( ep.faulty, 0) faulty,
        IFNULL((ep.production - ep.faulty), 0) complete,
        IFNULL((ep.faulty/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        rsm.kind AS raw_kind,
        rsm.product_name AS raw_product_name,
        rsm.product_id AS raw_product_id,
        c.cnt,
        d.avgTime
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
      (SELECT b.e_id, count(b.e_id) cnt
        FROM (SELECT e.e_id
	          FROM packing_ejection e
	          LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
	          LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
	          LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
	          <choose>
			      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
			        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
			      </when>
			        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
			        ORDER BY ${orderBy}
			      </when>
			  </choose>
			  <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
            ) b GROUP BY b.e_id
      ) c
    ON e.e_id = c.e_id
    JOIN
      (SELECT TIME_FORMAT(SEC_TO_TIME(avg(T1)), '%H:%i') as avgTime
         FROM (SELECT b.e_id, count(b.e_id) cnt, T1
                 FROM (SELECT e.e_id, @time := (unix_timestamp(end_time)-unix_timestamp(start_time)) T1
                  FROM packing_ejection e
                  LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
                  LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
                  LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                  INNER JOIN (SELECT @TIME :=0 FROM DUAL) DU
                  <include refid="wherePackingEjectionPaging"/>
                  <choose>
                  <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                    ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
                  </when>
                    <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                    ORDER BY ${orderBy}
                  </when>
              </choose>
              <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
               
               ) b GROUP BY b.e_id
            ) c
            
       ) d 
    <include refid="wherePackingEjectionPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
		ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
  </select>

  <select id="selectPackingEjectionPagingCount" parameterType="java.util.HashMap" resultType="Integer">
    SELECT count(*)
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    <include refid="wherePackingEjectionPaging"/>
  </select>

  <select id="selectPackingEjectionPagingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        e.raw_id,
        DATE_FORMAT(e.ejection_date, '%y-%m-%d') as ejection_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.ejection,
        (select code_name from common_code where code = e.ejection AND code_group='ejection') as ejection_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.ejection_group,
        (select code_name from common_code where code = e.ejection_group AND code_group='jab_class') as ejection_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        vm.product_id,
        IFNULL( ep.production, 0) production,
        IF( ep.faulty_a=0, null, faulty_a) faulty_a,
        IF( ep.faulty_b=0, null, faulty_b) faulty_b,
        IF( ep.faulty_c=0, null, faulty_c) faulty_c,
        IF( ep.faulty_d=0, null, faulty_d) faulty_d,
        IF( ep.faulty_e=0, null, faulty_e) faulty_e,
        IF( ep.faulty_f=0, null, faulty_f) faulty_f,
        IF( ep.faulty_g=0, null, faulty_g) faulty_g,
        IF( ep.faulty_h=0, null, faulty_h) faulty_h,
        IF( ep.faulty_i=0, null, faulty_i) faulty_i,
        IF( ep.faulty_j=0, null, faulty_j) faulty_j,
        IF( ep.faulty_k=0, null, faulty_k) faulty_k,
        IFNULL( ep.faulty, 0) faulty,
        IFNULL((ep.production - ep.faulty), 0) complete,
        IFNULL((ep.faulty/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        rsm.kind AS raw_kind,
        rsm.product_name AS raw_product_name,
        rsm.product_id AS raw_product_id,
        c.cnt
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
       (SELECT b.e_id, count(b.e_id) cnt
            FROM (SELECT e.e_id
		          FROM packing_ejection e
		          LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
		          LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
		          LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
		          <choose>
				      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
				        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
				      </when>
				        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
				        ORDER BY ${orderBy}
				      </when>
				 </choose>
                 <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
                ) b  GROUP BY b.e_id
        ) c
    ON e.e_id = c.e_id
    <include refid="wherePackingEjectionPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
		ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
  </select>

  <select id="selectRawStocks" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT * FROM 
	    (SELECT rsm.product_name AS raw_product_name,
	        rsm.raw_id AS raw_id,
	        vm.kind,
	        vm.model_car,
	        vm.product_name,
	        vm.lh_rh
	    FROM packing_ejection e
	    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
	    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
	    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
	    ) A
    <where>
		<!-- 구분 -->
		<if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(kind)">AND A.kind = #{kind}</if>
		<!-- 차종 -->
		<if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(modelCar)">AND A.model_car = #{modelCar}</if>
		<!-- 품명 -->
		<if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(productName)">AND A.product_name = #{productName}</if>
		<!-- 품명 -->
		<if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(lhRh)">AND A.lh_rh = #{lhRh}</if>
	</where>
	GROUP BY raw_id
	ORDER BY raw_product_name
  </select>

  <insert id="insertPackingEjection" parameterType="PackingEjection" useGeneratedKeys="true" keyProperty="eId">
    INSERT INTO packing_ejection
    (raw_id, ejection_date, work_type, ejection, start_time, end_time, plan_start_time, plan_end_time, ct, work_man1, work_man2, ejection_group, weight1, weight2, weight3, gate_weight, total_production, cycle_time, created, last_modified)
    VALUES
    (#{rawId}, STR_TO_DATE(#{ejectionDate}, '%Y-%m-%d'), #{workType}, #{ejection}, STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i'), STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i'), STR_TO_DATE(#{planStartTime}, '%Y-%m-%d %H:%i'), STR_TO_DATE(#{planEndTime}, '%Y-%m-%d %H:%i'), #{ct}, #{workMan1}, #{workMan2}, #{ejectionGroup}, #{weight1}, #{weight2}, #{weight3}, #{gateWeight}, #{totalProduction}, #{cycleTime}, now(), now())
  </insert>

  <insert id="insertPackingEjectionProduce" parameterType="PackingEjectionProduce" useGeneratedKeys="true" keyProperty="epId">
    INSERT INTO packing_ejection_produce
    (e_id, vehicle_id, production, faulty, faulty_a, faulty_b, faulty_c, faulty_d, faulty_e, faulty_f, faulty_g, faulty_h, faulty_i, faulty_j, faulty_k, weight, cvt)
    VALUES
    (#{eId}, #{vehicleId}, #{production}, #{faulty}, #{faultyA}, #{faultyB}, #{faultyC}, #{faultyD}, #{faultyE}, #{faultyF}, #{faultyG}, #{faultyH}, #{faultyI}, #{faultyJ}, #{faultyK}, #{weight}, #{cvt})
  </insert>

	<update id="updatePackingEjection" parameterType="PackingEjection">
		UPDATE packing_ejection
	    SET last_modified = now()
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ejectionDate)">, ejection_date = STR_TO_DATE(#{ejectionDate}, '%Y-%m-%d')</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(workType)">, work_type = #{workType}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ejection)">, ejection = #{ejection}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startTime)">, start_time = STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i')</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(endTime)">, end_time = STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i')</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ejectionGroup)">, ejection_group = #{ejectionGroup}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(weight1)">, weight1 = #{weight1}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(weight2)">, weight2 = #{weight2}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(weight3)">, weight3 = #{weight3}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(gateWeight)">, gate_weight = #{gateWeight}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(totalProduction)">, total_production = #{totalProduction}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(cycleTime)">, cycle_time = #{cycleTime}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(rawId)">, raw_id = #{rawId}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(ct)">, ct = #{ct}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(workMan1)">, work_man1 = #{workMan1}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(workMan2)">, work_man2 = #{workMan2}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(planStartTime)">, plan_start_time = #{planStartTime}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(planEndTime)">, plan_end_time = #{planEndTime}</if>
	    WHERE e_id = #{eId}
    </update>

	<update id="updatePackingEjectionProduce" parameterType="PackingEjectionProduce">
    	UPDATE packing_ejection_produce
	    SET last_modified = now()
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(production)">, production = #{production}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faulty)">, faulty = #{faulty}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyA)">, faulty_a = #{faultyA}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyB)">, faulty_b = #{faultyB}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyC)">, faulty_c = #{faultyC}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyD)">, faulty_d = #{faultyD}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyE)">, faulty_e = #{faultyE}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyF)">, faulty_f = #{faultyF}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyG)">, faulty_g = #{faultyG}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyH)">, faulty_h = #{faultyH}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyI)">, faulty_i = #{faultyI}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyJ)">, faulty_j = #{faultyJ}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(faultyK)">, faulty_k = #{faultyK}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(weight)">, weight = #{weight}</if>
	    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(cvt)">, cvt = #{cvt}</if>
	    WHERE e_id = #{eId} AND ep_id = #{epId}
    </update>

    <update id="confirmPackingEjection" parameterType="PackingEjection">
        UPDATE packing_ejection
	    SET is_check=#{isCheck}, check_user=#{checkUser}, check_date=now()
	    WHERE e_id = #{eId}
    </update>

    <delete id="deletePackingEjection" parameterType="java.util.HashMap">
        DELETE FROM packing_ejection
	    <where>
	      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(eId)">e_id = #{eId}</if>
	    </where>
    </delete>

    <delete id="deletePackingEjectionProduce" parameterType="java.util.HashMap">
        DELETE FROM packing_ejection_produce
	    <where>
	      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(eId)">e_id = #{eId}</if>
	    </where>
    </delete>

  <select id="useEjection" parameterType="Integer" resultType="Integer">
    SELECT count(*)
    FROM packing_ejection
    WHERE raw_id = #{rawId}
  </select>

</mapper>
