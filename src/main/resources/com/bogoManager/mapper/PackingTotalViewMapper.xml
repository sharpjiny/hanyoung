<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bogoManager.mapper.PackingTotalViewMapper">

   <sql id="wherePackingEjectionPaging">
    <where>
      <!-- 검사일 -->
      <choose>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
            AND REPLACE(e.ejection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND REPLACE(#{dateEnd}, '-', '')
          </when>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart)">
            AND REPLACE(e.ejection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND '99999999'
          </when>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
            AND REPLACE(e.ejection_date, '-', '') BETWEEN '00000000' AND REPLACE(#{dateEnd}, '-', '')
          </when>
      </choose>
    </where>
  </sql>

  <select id="selectPackingEjectionTotalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        e.raw_id,
        DATE_FORMAT(e.ejection_date, '%y-%m-%d') as ejection_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.ejection,
        (select code_name from common_code where code = e.ejection AND code_group='ejection') as ejection_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.ejection_group,
        (select code_name from common_code where code = e.ejection_group AND code_group='jab_class') as ejection_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        IFNULL( ep.production, 0) production,
        IFNULL( ep.faulty_a, 0) faulty_a,
        IFNULL( ep.faulty_b, 0) faulty_b,
        IFNULL( ep.faulty_c, 0) faulty_c,
        IFNULL( ep.faulty_d, 0) faulty_d,
        IFNULL( ep.faulty_e, 0) faulty_e,
        IFNULL( ep.faulty_f, 0) faulty_f,
        IFNULL( ep.faulty_g, 0) faulty_g,
        IFNULL( ep.faulty_h, 0) faulty_h,
        IFNULL( ep.faulty_i, 0) faulty_i,
        IFNULL( ep.faulty_j, 0) faulty_j,
        IFNULL( ep.faulty_k, 0) faulty_k,
        IFNULL( ep.faulty, 0) faulty,
        IFNULL((ep.production - ep.faulty), 0) complete,
        IFNULL((ep.faulty/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        rsm.kind AS raw_kind,
        rsm.product_name AS raw_product_name,
        rsm.product_id AS raw_product_id,
        c.cnt,
        d.avgTime
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
       (SELECT b.e_id, count(b.e_id) cnt
            FROM (SELECT e.e_id
                  FROM packing_ejection e
                  LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
                  LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
                  LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                  <choose>
                      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
                      </when>
                        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                        ORDER BY ${orderBy}
                      </when>
                 </choose>
                 <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumEje)">LIMIT #{startNum}, #{pageCutNumEje}</if>
                ) b  GROUP BY b.e_id
        ) c
    ON e.e_id = c.e_id 
    JOIN
      (SELECT TIME_FORMAT(SEC_TO_TIME(avg(T1)), '%H:%i') as avgTime
         FROM (SELECT b.e_id, count(b.e_id) cnt, T1
                 FROM (SELECT e.e_id, @time := (unix_timestamp(end_time)-unix_timestamp(start_time)) T1
                  FROM packing_ejection e
                  LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
                  LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
                  LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                  INNER JOIN (SELECT @TIME :=0 FROM DUAL) DU
                  <include refid="wherePackingEjectionPaging"/>
                  <choose>
                  <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                    ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
                  </when>
                    <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                    ORDER BY ${orderBy}
                  </when>
              </choose>
              <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
               
               ) b GROUP BY b.e_id
            ) c
            
       ) d 
    <include refid="wherePackingEjectionPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
  </select>

  <select id="selectPackingEjectionTotalPagingCount" parameterType="java.util.HashMap" resultType="Integer">
    SELECT count(*)
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    <include refid="wherePackingEjectionPaging"/>
  </select>

  <select id="selectPackingEjectionTotalPagingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        e.raw_id,
        DATE_FORMAT(e.ejection_date, '%y-%m-%d') as ejection_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.ejection,
        (select code_name from common_code where code = e.ejection AND code_group='ejection') as ejection_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.ejection_group,
        (select code_name from common_code where code = e.ejection_group AND code_group='jab_class') as ejection_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        IFNULL( ep.production, 0) production,
        IFNULL( ep.faulty_a, 0) faulty_a,
        IFNULL( ep.faulty_b, 0) faulty_b,
        IFNULL( ep.faulty_c, 0) faulty_c,
        IFNULL( ep.faulty_d, 0) faulty_d,
        IFNULL( ep.faulty_e, 0) faulty_e,
        IFNULL( ep.faulty_f, 0) faulty_f,
        IFNULL( ep.faulty_g, 0) faulty_g,
        IFNULL( ep.faulty_h, 0) faulty_h,
        IFNULL( ep.faulty_i, 0) faulty_i,
        IFNULL( ep.faulty_j, 0) faulty_j,
        IFNULL( ep.faulty_k, 0) faulty_k,
        IFNULL( ep.faulty, 0) faulty,
        IFNULL((ep.production - ep.faulty), 0) complete,
        IFNULL((ep.faulty/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        rsm.kind AS raw_kind,
        rsm.product_name AS raw_product_name,
        rsm.product_id AS raw_product_id,
        c.cnt
    FROM packing_ejection e
    LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
    LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
       (SELECT b.e_id, count(b.e_id) cnt
            FROM (SELECT e.e_id
                  FROM packing_ejection e
                  LEFT JOIN raw_stock_management rsm ON (e.raw_id = rsm.raw_id)
                  LEFT JOIN packing_ejection_produce ep ON (e.e_id=ep.e_id)
                  LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                  <choose>
                      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
                      </when>
                        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                        ORDER BY ${orderBy}
                      </when>
                 </choose>
                 <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumEje)">LIMIT #{startNum}, #{pageCutNumEje}</if>
                ) b  GROUP BY b.e_id
        ) c
    ON e.e_id = c.e_id  
    <include refid="wherePackingEjectionPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
        ORDER BY e.ejection_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumEje)">LIMIT #{startNum}, #{pageCutNumEje}</if>
  </select>

  <sql id="wherePackingVaccumPaging">
    <where>
      <!-- 검사일 -->
      <choose>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
            AND REPLACE(e.vaccum_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND REPLACE(#{dateEnd}, '-', '')
          </when>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart)">
            AND REPLACE(e.vaccum_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND '99999999'
          </when>
          <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
            AND REPLACE(e.vaccum_date, '-', '') BETWEEN '00000000' AND REPLACE(#{dateEnd}, '-', '')
          </when>
      </choose>
    </where>
  </sql>

  <select id="selectPackingVaccumTotalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        DATE_FORMAT(e.vaccum_date, '%y-%m-%d') as vaccum_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.vaccum,
        (select code_name from common_code where code = e.vaccum AND code_group='vaccum') as vaccum_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.vaccum_group,
        (select code_name from common_code where code = e.vaccum_group AND code_group='jab_class') as vaccum_group_name,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        IFNULL( ep.production, 0) production,
        IFNULL((ep.production - 0), 0) complete,
        IFNULL((1/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        c.cnt,
        e.tunc_used,
        d.avgTime
    FROM packing_vaccum e
    LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
       (SELECT b.e_id, count(b.e_id) cnt
            FROM (SELECT e.e_id
                  FROM packing_vaccum e
                      LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
                      LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                      <choose>
                          <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                            ORDER BY e.vaccum_date DESC, e.e_id, ep.ep_id
                          </when>
                            <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                            ORDER BY ${orderBy}
                          </when>
                        </choose>
                      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumVac)">LIMIT #{startNum}, #{pageCutNumVac}</if>
            ) b GROUP BY b.e_id
        ) c
    ON e.e_id = c.e_id 
    JOIN
       (SELECT TIME_FORMAT(SEC_TO_TIME(avg(T1)), '%H:%i') as avgTime 
            FROM 
            (SELECT b.e_id, count(b.e_id) cnt, T1
                FROM (SELECT e.e_id, @time := (unix_timestamp(end_time)-unix_timestamp(start_time)) T1
                      FROM packing_vaccum e
                          LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
                          LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                          <include refid="wherePackingVaccumPaging"/>
                          <choose>
                              <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                                ORDER BY e.vaccum_date DESC, e.e_id, ep.ep_id
                              </when>
                                <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                                ORDER BY ${orderBy}
                              </when>
                            </choose>
                          <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
                ) b GROUP BY b.e_id
                
            ) c 
        ) d
    <include refid="wherePackingVaccumPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
        ORDER BY e.vaccum_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
  </select>

  <select id="selectPackingVaccumTotalPagingCount" parameterType="java.util.HashMap" resultType="Integer">
    SELECT count(*)
    FROM packing_vaccum e
    LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    <include refid="wherePackingVaccumPaging"/>
  </select>

  <select id="selectPackingVaccumTotalPagingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT e.e_id,
        DATE_FORMAT(e.vaccum_date, '%y-%m-%d') as vaccum_date,
        e.work_type,
        (select code_name from common_code where code = e.work_type AND code_group='work_type') as work_type_name,
        e.vaccum,
        (select code_name from common_code where code = e.vaccum AND code_group='vaccum') as vaccum_name,
        DATE_FORMAT(e.start_time, "%m-%d %H:%i") start_time,
        DATE_FORMAT(e.end_time, "%m-%d %H:%i") end_time,
        TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H:%i') as d_time,
        ''+TIME_FORMAT(SEC_TO_TIME(unix_timestamp(end_time)-unix_timestamp(start_time)), '%H.%i') as unix_time,
        e.vaccum_group,
        (select code_name from common_code where code = e.vaccum_group AND code_group='jab_class') as vaccum_group_name,
        e.weight1,
        e.weight2,
        e.weight3,
        e.total_production,
        e.cycle_time,
        e.is_check,
        e.check_user,
        e.check_date,
        e.created,
        e.last_modified,
        ep.ep_id,
        ep.vehicle_id,
        IFNULL( ep.production, 0) production,
        IFNULL((ep.production - 1), 0) complete,
        IFNULL((1/ep.production*100), 0) defect_rate,
        vm.kind,
        vm.product_name,
        vm.model_car,
        vm.lh_rh,
        vm.product_id,
        vm.client,
        c.cnt,
        e.tunc_used
    FROM packing_vaccum e
    LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
    LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
    LEFT JOIN
       (SELECT b.e_id, count(b.e_id) cnt
            FROM (SELECT e.e_id
                  FROM packing_vaccum e
                      LEFT JOIN packing_vaccum_produce ep ON (e.e_id=ep.e_id)
                      LEFT JOIN vehicle_management vm ON (ep.vehicle_id = vm.vehicle_id)
                      <choose>
                          <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                            ORDER BY e.vaccum_date DESC, e.e_id, ep.ep_id
                          </when>
                            <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                            ORDER BY ${orderBy}
                          </when>
                        </choose>
                      <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumVac)">LIMIT #{startNum}, #{pageCutNumVac}</if>
            ) b GROUP BY b.e_id
        ) c
    ON e.e_id = c.e_id  
    <include refid="wherePackingVaccumPaging"/>
    <choose>
      <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
        ORDER BY e.vaccum_date DESC, e.e_id, ep.ep_id
      </when>
        <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
        ORDER BY ${orderBy}
      </when>
    </choose>
    <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumVac)">LIMIT #{startNum}, #{pageCutNumVac}</if>
  </select>


  <sql id="wherePackingInspectionPaging">
        <where>
            <!-- 검사일 -->
            <choose>
                <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
                    AND REPLACE(a.inspection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND REPLACE(#{dateEnd}, '-', '')
                </when>
                <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart)">
                    AND REPLACE(a.inspection_date, '-', '') BETWEEN REPLACE(#{dateStart}, '-', '') AND '99999999'
                </when>
                <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
                    AND REPLACE(a.inspection_date, '-', '') BETWEEN '00000000' AND REPLACE(#{dateEnd}, '-', '')
                </when>
            </choose>
        </where>
    </sql>

    <select id="selectPackingInspectionTotalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            a.id,
            a.vehicle_id,
            DATE_FORMAT(a.inspection_date, '%y-%m-%d') as inspection_date,
            a.jab_class,
            (select code_name from common_code where code = a.jab_class AND code_group='jab_class') as jab_class_name,
            a.work_type,
            (select code_name from common_code where code = a.work_type) as work_type_name,
            a.production,
            a.faulty_a,
            a.faulty_b,
            a.faulty_c,
            a.faulty_d,
            a.faulty_e,
            a.faulty_f,
            a.faulty_g,
            a.faulty_h,
            a.faulty_i,
            a.faulty_j,
            a.faulty_k,
            a.faulty_l,
            a.faulty,
            (a.production - a.faulty) as complete,
            a.is_check,
            a.check_user,
            a.check_date,
            b.kind,
            b.model_car,
            b.product_name,
            b.lh_rh,
            b.product_id,
            b.client
        FROM packing_inspection a
        LEFT JOIN vehicle_management b ON (a.vehicle_id = b.vehicle_id)
        <include refid="wherePackingInspectionPaging"/>
        <choose>
            <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                ORDER BY a.CREATED DESC
            </when>
            <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                ORDER BY ${orderBy}
            </when>
        </choose>
    </select>

    <select id="selectPackingInspectionTotalPagingCount" parameterType="java.util.HashMap" resultType="Integer">
        SELECT count(*)
        FROM packing_inspection a
        LEFT JOIN vehicle_management b ON (a.vehicle_id = b.vehicle_id)
        <include refid="wherePackingInspectionPaging"/>
    </select>

    <select id="selectPackingInspectionTotalPagingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            a.id,
            a.vehicle_id,
            DATE_FORMAT(a.inspection_date, '%y-%m-%d') as inspection_date,
            a.jab_class,
            (select code_name from common_code where code = a.jab_class AND code_group='jab_class') as jab_class_name,
            a.work_type,
            (select code_name from common_code where code = a.work_type) as work_type_name,
            a.production,
            a.faulty_a,
            a.faulty_b,
            a.faulty_c,
            a.faulty_d,
            a.faulty_e,
            a.faulty_f,
            a.faulty_g,
            a.faulty_h,
            a.faulty_i,
            a.faulty_j,
            a.faulty_k,
            a.faulty_l,
            a.faulty,
            (a.production - a.faulty) as complete,
            a.is_check,
            a.check_user,
            a.check_date,
            b.kind,
            b.model_car,
            b.product_name,
            b.lh_rh,
            b.product_id,
            b.client
        FROM packing_inspection a
        LEFT JOIN vehicle_management b ON (a.vehicle_id = b.vehicle_id)
        <include refid="wherePackingInspectionPaging"/>
        <choose>
            <when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
                ORDER BY a.CREATED DESC
            </when>
            <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
                ORDER BY ${orderBy}
            </when>
        </choose>
        <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNumIns)">LIMIT #{startNum}, #{pageCutNumIns}</if>
    </select>
    
    

</mapper>
