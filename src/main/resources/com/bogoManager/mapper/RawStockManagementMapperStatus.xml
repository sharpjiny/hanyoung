<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bogoManager.mapper.RawStockManagementMapperStatus">

	<!-- 종류 목록 -->
	<select id="selectRawKinds" parameterType="java.util.HashMap" resultType="String">
	/* RawStockManagementMapperStatus.selectRawKinds */
		SELECT kind
		FROM raw_stock_management_status
		GROUP BY kind
		ORDER BY kind
	</select>

	<!-- 품명 목록 -->
	<select id="selectRawProducts" parameterType="java.util.HashMap" resultType="Codes">
	/* RawStockManagementMapperStatus.selectRawProducts */
		SELECT idx AS code, product_name AS name
		FROM raw_stock_management_status
		<where>
			<!-- 구분 -->
			<if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(kind)">AND kind = #{kind}</if>
		</where>
		GROUP BY product_name
		ORDER BY product_name
	</select>

	<!-- 원재료 입출고 단건 조회 -->
	<select id="selectRawStock" parameterType="rawStockManagementStatus" resultType="rawStockManagementStatus">
	/* RawStockManagementMapperStatus.selectRawStock */
		SELECT idx                                             /* 원재료입출고번호 */
             , kind                                            /* 종류 */
             , DATE_FORMAT(STR_TO_DATE(settlement_month, '%Y%m'),'%Y-%m') as settlement_month /* 결산월 */
             , product_name                                    /* 품명 */
             , product_id                                      /* 품명ID */
             , client                                          /* 입고처 */
             , price                                           /* 단가 */
             , DATE_FORMAT(created, '%Y-%m-%d') AS created     /* 날짜 */
             , DATE_FORMAT(firstcreated,'%Y-%m-%d %H:%i:%s' )AS firstcreatedStr
             , DATE_FORMAT(last_modified,'%Y-%m-%d %H:%i:%s' )AS last_modifiedStr
             , Floor(weight) AS weight                         /* 중량 */
             , bigo                                            /* 내용 */
             , ROUND(realprice,3) AS realprice                  /* 금액 */
             , raw_gubun AS raw_gubun_cd                        /* 구분 코드 */
             , (select code_name
                 from common_code
                 where code_group = 'raw_gubun'
                   and code = raw_gubun
               ) AS raw_gubun                                   /* 구분명 */
             , loft_number                                     /* 로트번호 */
             , is_check                                        /* 확인 */
             , last_modified                                   /* 수정날짜 */
             , pWeight                                         /* 포대당중량 */        
             , pNumber                                         /* 포대중량 */
		FROM raw_stock_management_status
       WHERE idx = #{idx}
       
	</select>

	<!-- 조회조건 공통 -->
	<sql id="whereRawStockPaging">
		<where>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(idx)">
              AND idx = #{idx}
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(dateStart) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(dateEnd)">
              AND created BETWEEN CONCAT(#{dateStart},' 00:00:00') and  CONCAT(#{dateEnd},' 23:59:59')
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(stockGubun)">
              AND raw_gubun = #{stockGubun}
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(kind)">
              AND kind = #{kind}
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(productName)">
              AND product_name = #{productName}
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(client)">
              AND client = #{client}
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(loftNumber)">
              AND loft_number like CONCAT(#{loftNumber},'%')
            </if>
            <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(settlementMonth)">
              AND settlement_month = concat(date_format(now(), '%Y'),#{settlementMonth})
            </if>
		</where>
	</sql>

	<!-- 원재료 입출고 리스트 COUNT -->
	<select id="selectRawStockPagingCount" parameterType="java.util.HashMap" resultType="Integer">
	/* RawStockManagementMapperStatus.selectRawStockPagingCount */
		SELECT count(*)
		FROM raw_stock_management_status A
        <include refid="whereRawStockPaging"/>
	</select>

	<!-- 원재료 입출고 리스트 조회 -->
    <select id="selectRawStockPagingList" parameterType="java.util.HashMap"  resultType="RawStockManagementStatus">
    /* RawStockManagementMapperStatus.selectRawStockPagingList */
    SELECT idx                                             /* 원재료입출고번호 */
         , kind                                            /* 종류 */
         , DATE_FORMAT(STR_TO_DATE(settlement_month, '%Y%m'),'%Y-%m') as settlement_month /* 결산월 */
         , product_name                                    /* 품명 */
         , product_id                                      /* 품명ID */
         , client                                          /* 입고처 */
         , price                                           /* 단가 */
         , DATE_FORMAT(created, '%Y-%m-%d') AS created     /* 날짜 */
        , Floor(pWeight) AS pWeight        
        , Floor(pNumber) AS pNumber        
         , Floor(weight) AS weight                         /* 중량 */
         , bigo                                            /* 내용 */
         , ROUND(realprice,3) AS realprice                  /* 금액 */
         , raw_gubun AS raw_gubun_cd                        /* 구분 코드 */
         , (select code_name
             from common_code
             where code_group = 'raw_gubun'
               and code = raw_gubun
           ) AS raw_gubun                                   /* 구분명 */
         , loft_number                                     /* 로트번호 */
         , is_check                                        /* 확인 */
         , last_modified                                   /* 수정날짜 */
      FROM raw_stock_management_status A
    <include refid="whereRawStockPaging"/>
	   ORDER BY created desc, firstcreated desc
     <if test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.bogoManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
    </select>

	<!-- 원재료재고현황 조회 -->
    <select id="selectRawStockStatisticsList" parameterType="java.util.HashMap"  resultType="RawStockManagementStatus">
        /* RawStockManagementMapperStatus.selectRawStockStatisticsList */
        SELECT a.kind
             , b.client
             , a.product_name
             , a.loft_number
             , sum(b.weight) as weight
             , count(*) as cnt
             , price 
             , price * sum(b.weight) as realPrice
        FROM raw_stock_management_status a
            , (SELECT MAX(idx) AS idx
                    , SUM(CASE WHEN raw_gubun IN ('raw01','raw05','raw06','raw07','raw08') THEN weight
                          ELSE -1 * weight
                           END ) AS weight,client
                 FROM raw_stock_management_status
                GROUP BY loft_number,client
              ) b
        WHERE a.idx = b.idx
          AND b.weight != 0
          group by a.kind, b.client, a.product_name
          HAVING sum(b.weight) != 0
        ORDER BY a.kind, b.client, a.product_name, a.loft_number  
    </select>


	<select id="selectRawStockList" parameterType="java.util.HashMap" resultType="rawStockManagementStatus">
		SELECT idx,
		    kind,
		    product_name,
		    product_id,
		    client,
		    price,
		    created,
		    last_modified
		FROM raw_stock_management_status AS A
		<include refid="whereRawStockPaging"/>
		<choose>
			<when test="@com.bogoManager.web.util.CommonUtil@isEmpty(orderBy)">
			    ORDER BY A.created DESC, A.firstcreated DESC
			</when>
		    <when test="@com.bogoManager.web.util.CommonUtil@isNotEmpty(orderBy)">
				ORDER BY ${orderBy}
			</when>
		</choose>
	</select>

	<!-- 원재료 입출고 리스트 등록 -->
    <insert id="insertRawStock" parameterType="rawStockManagementStatus" >
    /* RawStockManagementMapperStatus.insertRawStock */
	    INSERT INTO raw_stock_management_status
		(settlement_month, realPrice, loft_number, raw_gubun, bigo, pWeight,pNumber,weight, price, kind, product_name, product_id, client, created,firstcreated, last_modified)
		VALUES
		(concat(date_format(now(), '%Y'),#{settlementMonth}), ROUND(#{price} * Floor(#{weight}), 3), TRIM(#{loftNumber}), #{rawGubun}, TRIM(#{bigo}),Floor(#{pWeight}),Floor(#{pNumber}), Floor(#{weight}), #{price}, #{kind}, #{productName}, #{productId}, #{client}, STR_TO_DATE(#{inputdate}, '%Y-%m-%d'),now(), now())
	</insert>

	<!-- 원재료 입출고 리스트 수정 -->
    <update id="updateRawStock" parameterType="rawStockManagementStatus">
    /* RawStockManagementMapperStatus.updateRawStock */
        UPDATE raw_stock_management_status
		SET last_modified = now()
		  , realPrice = ROUND(#{price} * Floor(#{weight}), 3)
		  , loft_number = TRIM(#{loftNumber})
		  , raw_gubun = #{rawGubun}
		  , pWeight = Floor(#{pWeight})
		   , pNumber = Floor(#{pNumber})
		    , weight = Floor(#{weight})
		  , price = #{price}
		  , kind = #{kind}
		  , product_name = #{productName}
		  , product_id = #{productId}
		  , client = #{client}
		  , created = STR_TO_DATE(#{inputdate}, '%Y-%m-%d')
		  , is_check = #{isCheck}
	      , bigo = TRIM(#{bigo})
	      , settlement_month = concat(date_format(now(), '%Y'),#{settlementMonth})
		WHERE idx = #{idx}
    </update>

	<!-- 원재료 입출고 확인처리 -->
    <update id="updateRawStockIsCheckOk" parameterType="rawStockManagementStatus">
    /* RawStockManagementMapperStatus.updateRawStockIsCheckOk */
       UPDATE raw_stock_management_status
		  SET last_modified = now()
            , is_check = #{isCheck}
		WHERE idx = #{idx}
    </update>
	<!-- 원재료 입출고 리스트 삭제 -->
    <delete id="deleteRawStock" parameterType="rawStockManagementStatus">
    /* RawStockManagementMapperStatus.deleteRawStock */
        DELETE FROM raw_stock_management_status
         WHERE idx = #{idx}
    </delete>



    <!-- 원재료 입출고 리스트 수정 -->
    <update id="updateCommonCode" parameterType="java.util.HashMap">
    /* RawStockManagementMapperStatus.updateRawStock */
        UPDATE raw_stock_management_status
		SET last_modified = now()
		  
		  , kind = #{kind}
		  , product_name = #{productName}
		  , product_id = #{productId}
		  , client = #{client}

		WHERE product_name = #{asIsproductName} and product_id = #{asIsproductId}
		      and kind = #{asIskind} and client = #{asIsclient}
    </update>
</mapper>