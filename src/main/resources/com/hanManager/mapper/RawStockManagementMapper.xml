<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanManager.mapper.RawStockManagementMapper">

	<select id="selectRawKinds" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT kind
		       , raw_id as vehicleId
		FROM raw_stock_management
		GROUP BY kind
		ORDER BY kind
	</select>

	<select id="selectRawProducts" parameterType="java.util.HashMap" resultType="Codes">
		SELECT product_name AS code, product_name AS name
		FROM raw_stock_management
		<where>
			<!-- 구분 -->
			<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(kind)">AND kind = #{kind}</if>
		</where>
		<!-- GROUP BY product_name -->
		ORDER BY product_name
	</select>
	
	<select id="selectRawProductsRawId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT raw_id AS code, product_name AS name 
        FROM raw_stock_management
        <where>
            <!-- 구분 -->
            <if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(kind)">AND kind = #{kind}</if>
        </where>
        <!-- GROUP BY product_name -->
        ORDER BY raw_id
    </select>

	<select id="selectRawClient" parameterType="java.util.HashMap" resultType="Codes">
		SELECT client AS code, client AS name
		FROM raw_stock_management
		<where>
			<!-- 구분 -->
			<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(kind)">AND kind = #{kind}</if>
			<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(productName)">AND product_name = #{productName}</if>
		</where>
		GROUP BY client
		ORDER BY client
	</select>

	<!-- 고유번호, 단가 조회 -->
	<select id="selectRawPrice" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	/* rawStockMapper.selectRawPrice */
    SELECT
           X.*
     FROM (
     		SELECT
		           @ROWNUM := @ROWNUM + 1 AS ROWNUM
		         , a.price
		         , a.product_id
		      FROM raw_stock_management a
		       , (SELECT @ROWNUM := 0) R
		    <where>
		    	<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(client)">AND client = #{client}</if>
		    	<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(kind)">AND kind = #{kind}</if>
		    	<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(productName)">AND product_name = #{productName}</if>
		    </where>
           ) X
    WHERE X.ROWNUM = 1


	</select>
	<select id="selectRawStock" parameterType="rawStockManagement" resultType="rawStockManagement">
		SELECT raw_id,
		    kind,
		    product_name,
		    product_id,
		    client,
		    price,
		    created,
		    last_modified
		FROM raw_stock_management
		WHERE raw_id = #{rawId}
	</select>

	<sql id="whereRawStockPaging">
		<where>
			<!-- 품명 -->
			<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(productName)">AND product_name LIKE CONCAT('%',#{productName},'%') </if>
		</where>
	</sql>

	<select id="selectRawStockPagingCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*)
		FROM raw_stock_management A
		<include refid="whereRawStockPaging"/>
	</select>

	<select id="selectRawStockPagingList" parameterType="java.util.HashMap" resultType="rawStockManagement">
		SELECT raw_id,
		    kind,
		    product_name,
		    product_id,
		    client,
		    price,
		    created,
		    last_modified
		FROM raw_stock_management AS A
		<include refid="whereRawStockPaging"/>
		<choose>
			<when test="@com.hanManager.web.util.CommonUtil@isEmpty(orderBy)">
			    ORDER BY A.kind, A.product_name, A.client DESC
			</when>
		    <when test="@com.hanManager.web.util.CommonUtil@isNotEmpty(orderBy)">
				ORDER BY ${orderBy}
			</when>
		</choose>
		<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(startNum) and @com.hanManager.web.util.CommonUtil@isNotEmpty(pageCutNum)">LIMIT #{startNum}, #{pageCutNum}</if>
	</select>

	<select id="selectRawStockList" parameterType="java.util.HashMap" resultType="rawStockManagement">
		SELECT raw_id,
		    kind,
		    product_name,
		    product_id,
		    client,
		    price,
		    created,
		    last_modified
		FROM raw_stock_management AS A
		<include refid="whereRawStockPaging"/>
		<choose>
			<when test="@com.hanManager.web.util.CommonUtil@isEmpty(orderBy)">
			    ORDER BY A.kind, A.product_name, A.client DESC
			</when>
		    <when test="@com.hanManager.web.util.CommonUtil@isNotEmpty(orderBy)">
				ORDER BY ${orderBy}
			</when>
		</choose>
	</select>

    <insert id="insertRawStock" parameterType="rawStockManagement" >
	    INSERT INTO raw_stock_management
		(kind, product_name, product_id, client, price, created, last_modified)
		VALUES
		(#{kind}, #{productName}, #{productId}, #{client}, #{price}, now(), now())
	</insert>

    <update id="updateRawStock" parameterType="rawStockManagement">
    /* raw_stock_management > updateRawStock*/
        UPDATE raw_stock_management
		SET last_modified = now()
		<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(kind)">, kind = #{kind}</if>
		<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(productName)">, product_name = #{productName}</if>
		, product_id = #{productId}
		<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(client)">, client = #{client}</if>
		<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(price)">, price = #{price}</if>
		WHERE raw_id = #{rawId}
    </update>

    <delete id="deleteRawStock" parameterType="rawStockManagement">
        DELETE FROM raw_stock_management
		<where>
			<if test="@com.hanManager.web.util.CommonUtil@isNotEmpty(rawId)">raw_id = #{rawId}</if>
		</where>
    </delete>

</mapper>