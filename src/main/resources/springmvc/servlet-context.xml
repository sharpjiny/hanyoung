<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven validator="validator" >
        <mvc:message-converters>
            <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            </beans:bean>
        </mvc:message-converters>
    </annotation-driven>

    <beans:bean id="objectMapper"
        class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
        <beans:property name="simpleDateFormat" value="EEE, dd MMM yyyy HH:mm:ss zzz"></beans:property>
    </beans:bean>

    <mvc:default-servlet-handler/>

    <beans:bean id="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <beans:property name="validationMessageSource" ref="messageSource">
        </beans:property>
    </beans:bean>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/res/**" location="/res/" />

    <beans:bean id="loginInterceptor" class="com.bogoManager.web.util.LoginHandlerInterceptor">
        <beans:property name="excludeList">
            <beans:list>
                <beans:value>/index.*</beans:value>
                <beans:value>/login.*</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="firstPage" value="/home" />
    </beans:bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <beans:ref bean="loginInterceptor"/>
        </mvc:interceptor>

        <beans:bean id="com.bogoManager.controller.webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <beans:property name="cacheSeconds" value="0"/>
            <beans:property name="useExpiresHeader" value="true"/>
            <beans:property name="useCacheControlHeader" value="true"/>
            <beans:property name="useCacheControlNoStore" value="true"/>
            <beans:property name="cacheMappings">
                <beans:props>
                    <beans:prop key="/**/*.js">-1</beans:prop>
                    <beans:prop key="/**/*.css">-1</beans:prop>
                    <beans:prop key="/**/*.jpg">-1</beans:prop>
                    <beans:prop key="/**/*.git">-1</beans:prop>
                </beans:props>
            </beans:property>
        </beans:bean>
    </mvc:interceptors>

    <context:component-scan base-package="com.bogoManager.controller" />
    <context:component-scan base-package="com.bogoManager.service" />

<!--     <beans:bean id="handlerMapping" -->
<!--         class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" /> -->

	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <!--Don't add suffix or prefix like you do with .jsp files-->
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</beans:bean>

    <!-- Tiles 정의 start -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
			    <beans:value>classpath*:tiles/layout-com.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

	<!-- ViewResolver 설정 -->
	<beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>

    <beans:bean class="com.bogoManager.web.util.DefaultExeptionResolver">
        <beans:property name="defaultErrorView" value="error/error"/>
<!--
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="org.springframework.dao.DataAccessException">cmmn/error</beans:prop>
                <beans:prop key="org.springframework.transaction.TransactionException">cmmn/error</beans:prop>
                <beans:prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmmn/error</beans:prop>
                <beans:prop key="org.springframework.security.AccessDeniedException">cmmn/error</beans:prop>
            </beans:props>
        </beans:property>
 -->
    </beans:bean>

	<!-- Tiles 정의 & 기타 view 정의 End -->
<!-- 	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
<!-- 		<beans:property name="order" value="2"></beans:property> -->
<!-- 		<beans:property name="mediaTypes"> -->
<!-- 			<beans:map> -->
<!-- 				<beans:entry key="do" value="text/html" /> -->
<!-- 				<beans:entry key="json" value="application/json" /> -->
<!-- 				<beans:entry key="xml" value="text/xml" /> -->
<!-- 			</beans:map> -->
<!-- 		</beans:property> -->
<!-- 		<beans:property name="viewResolvers"> -->
<!-- 			<beans:list> -->
<!-- 				<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> -->
<!-- 					<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" /> -->
<!-- 					<beans:property name="order" value="1" /> -->
<!-- 				</beans:bean> -->
<!-- 				<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 					<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> -->
<!-- 					<beans:property name="prefix" value="/WEB-INF/views/" /> -->
<!-- 					<beans:property name="suffix" value=".jsp" /> -->
<!-- 					<beans:property name="order" value="2" /> -->
<!-- 				</beans:bean> -->
<!-- 			</beans:list> -->
<!-- 		</beans:property> -->
<!-- 		<beans:property name="defaultViews"> -->
<!-- 			<beans:list> -->
<!-- 				<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->
<!-- 			</beans:list> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

	<beans:bean name="excelView" class="com.bogoManager.web.excel.ExcelView"/>
<!-- 	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"></beans:bean> -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes 2MB -->
        <!-- <property name="maxUploadSize" value="2000000" /> -->
    </beans:bean>

    <!-- Configure the file upload directory -->
    <!--
    <beans:bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
        <beans:constructor-arg>
            <beans:value>/home/goindolo/upload</beans:value>
        </beans:constructor-arg>
    </beans:bean>
     -->
</beans:beans>
